package ma.youcode.crudSpringB.dao;

import ma.youcode.crudSpringB.entity.Employee;
import org.springframework.stereotype.Repository;
import javax.persistence.EntityManager;
import javax.persistence.Query;
import java.util.List;

@Repository
public class EmployeeDaoJPAImpl implements EmployeeDao {

    // 1) Define a field for entityManager
    private EntityManager entityManager;

    // 2) Add constructor injection
    // the entity manager is automatically generated by springB

    public EmployeeDaoJPAImpl(EntityManager entityManager) {
        this.entityManager = entityManager;
    }

    @Override
    public List<Employee> findAll() {

        //create query for create (using JPA)
        Query queryCreate = entityManager.createQuery("from Employee");
        /*  REMEMBER IN HIBERNATE NATIVE IT WAS :
        Query<Employee> queryCreate = entityManager.createQuery("from Employee"); */
        // execute the query and get result list (unchanged)
        List<Employee> employees = queryCreate.getResultList();
        //return the results
        return employees;
    }

    @Override
    public void saveEmployee(Employee employee) {

        // SAve or update the employee : (updated from saveorupdate to merge) and save it to an object Employee merge
        Employee dbEmployee = entityManager.merge(employee);
        // update with id from db ... so we can get generated id for save/insert
        employee.setId_employee(dbEmployee.getId_employee());

    }

    @Override
    public Employee readOneEmployee(Long idEmployee) {

        // get the employee (changement are : from session to entitymanager retrieve from "find")
        Employee oneEmployee = entityManager.find(Employee.class, idEmployee);
        // Return that one employee :
        return oneEmployee;
    }


    @Override
    public void deleteEmployee(Long idEmployee) {


        // delete object with the given primary key :
        Query query = entityManager.createQuery(
                "delete from Employee where id_employee=:id_employee"
/*
                "delete from Employee where id=:id_employee"  NO CHANGEMENT IN JPA
*/
        );

        query.setParameter(
                "id_employee",
                idEmployee
        );
        query.executeUpdate();
    }
}
